{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export function createCard(\n  card,\n  currentUserId,\n  openImagePopup,\n  handleDelete,\n  handleLike\n) {\n  const cardTemplate = document\n    .querySelector(\"#card-template\")\n    .content.cloneNode(true);\n  const cardElement = cardTemplate.querySelector(\".card\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCount = cardElement.querySelector(\".card__like-count\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  cardImage.src = card.link || \"#\";\n  cardImage.alt = card.name || \"Изображение\";\n  cardTitle.textContent = card.name || \"Без названия\";\n  likeCount.textContent = Array.isArray(card.likes) ? card.likes.length : 0;\n\n  const isLikedByUser = card.likes?.some((like) => like._id === currentUserId);\n  if (isLikedByUser) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  deleteButton.classList.toggle(\n    \"card__delete-button_hidden\",\n    card.owner._id !== currentUserId\n  );\n\n  if (card.owner && card.owner._id === currentUserId) {\n    deleteButton.addEventListener(\"click\", (event) => {\n      const cardElement = event.target.closest(\".card\");\n      handleDelete(cardElement, card._id);\n    });\n  }\n\n  cardImage.addEventListener(\"click\", () =>\n    openImagePopup(card.link, card.name)\n  );\n\n  likeButton.addEventListener(\"click\", () => {\n    handleLike(card._id, likeButton, likeCount);\n  });\n\n  return cardElement;\n}\n","const ANIMATION_DELAY = 10;\nconst ANIMATION_DURATION = 600;\n\nexport function openPopup(popup) {\n  if (!document.querySelector(\".popup_is-opened\")) {\n    document.addEventListener(\"keydown\", handleEscClose);\n  }\n\n  if (!popup.classList.contains(\"popup_is-animated\")) {\n    popup.classList.add(\"popup_is-animated\");\n  }\n\n  setTimeout(() => {\n    popup.classList.add(\"popup_is-opened\");\n    const focusable = popup.querySelector(\"input, button, textarea\");\n    if (focusable) focusable.focus();\n  }, ANIMATION_DELAY);\n}\n\nexport function closePopup(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n\n  setTimeout(() => {\n    popup.classList.remove(\"popup_is-animated\");\n  }, ANIMATION_DURATION);\n\n  if (!document.querySelector(\".popup_is-opened\")) {\n    document.removeEventListener(\"keydown\", handleEscClose);\n  }\n}\n\nfunction handleEscClose(event) {\n  if (event.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    if (openedPopup) closePopup(openedPopup);\n  }\n}\n","// Универсальная функция для поиска элемента ошибки\r\nfunction getErrorElement(form, input) {\r\n  return form.querySelector(`#${input.name}-error`);\r\n}\r\n\r\n// Универсальная функция для показа ошибок\r\nfunction showInputError(form, input, errorMessage, settings) {\r\n  const errorElement = getErrorElement(form, input);\r\n  if (!errorElement) {\r\n    console.error(`Элемент ошибки для input с name=\"${input.name}\" не найден.`);\r\n    return;\r\n  }\r\n  input.classList.add(settings.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(settings.errorClass);\r\n}\r\n\r\n// Универсальная функция для скрытия ошибок\r\nexport function hideInputError(form, input, settings) {\r\n  const errorElement = getErrorElement(form, input);\r\n  if (!errorElement) return;\r\n  input.classList.remove(settings.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(settings.errorClass);\r\n}\r\n\r\n// Функция проверки валидности инпута\r\nfunction checkInputValidity(form, input, settings) {\r\n  const errorMessage = getCustomErrorMessage(input);\r\n  if (!input.validity.valid) {\r\n    showInputError(form, input, errorMessage, settings);\r\n  } else {\r\n    hideInputError(form, input, settings);\r\n  }\r\n}\r\n\r\n// Функция получения пользовательского сообщения об ошибке\r\nfunction getCustomErrorMessage(input) {\r\n  const namePattern = /^[A-Za-z\\u0400-\\u04FFёЁ\\s-]+$/;\r\n  const urlPattern =\r\n    /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w.-]*)*\\/?$/;\r\n\r\n  if (input.validity.valueMissing) {\r\n    return \"Вы пропустили это поле\";\r\n  }\r\n\r\n  if ([\"name\", \"card-name\"].includes(input.name)) {\r\n    if (input.validity.tooShort) {\r\n      return `Минимальное количество символов: ${\r\n        input.minLength\r\n      }. Длина текста сейчас: ${input.value.length} символ${\r\n        input.value.length === 1 ? \"\" : \"а\"\r\n      }`;\r\n    }\r\n    if (input.validity.tooLong) {\r\n      return `Максимальное количество символов: ${\r\n        input.maxLength\r\n      }. Длина текста сейчас: ${input.value.length} символ${\r\n        input.value.length === 1 ? \"\" : \"а\"\r\n      }`;\r\n    }\r\n    if (!namePattern.test(input.value)) {\r\n      return \"Можно использовать только буквы, пробелы и дефисы\";\r\n    }\r\n  }\r\n\r\n  if ([\"link\", \"url\", \"avatar\", \"image-url\"].includes(input.name)) {\r\n    if (!urlPattern.test(input.value)) {\r\n      return \"Введите адрес сайта.\";\r\n    }\r\n  }\r\n\r\n  return input.validationMessage;\r\n}\r\n\r\n// Функция изменения состояния кнопки сабмита\r\nexport function toggleButtonState(inputs, button, settings) {\r\n  const isFormValid = inputs.every((input) => input.validity.valid);\r\n  button.disabled = !isFormValid;\r\n  button.classList.toggle(settings.inactiveButtonClass, !isFormValid);\r\n}\r\n\r\n// Функция установки обработчиков событий\r\nfunction setEventListeners(form, settings) {\r\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\r\n  const button = form.querySelector(settings.submitButtonSelector);\r\n\r\n  inputs.forEach((input) => {\r\n    input.addEventListener(\"input\", () => {\r\n      checkInputValidity(form, input, settings);\r\n      toggleButtonState(inputs, button, settings);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation(settings) {\r\n  const forms = Array.from(document.querySelectorAll(settings.formSelector));\r\n  forms.forEach((form) => {\r\n    form.addEventListener(\"submit\", (evt) => evt.preventDefault());\r\n    setEventListeners(form, settings);\r\n  });\r\n}\r\n\r\n// Функция очистки ошибок\r\nexport function clearValidation(form, settings) {\r\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\r\n  const button = form.querySelector(settings.submitButtonSelector);\r\n\r\n  inputs.forEach((input) => hideInputError(form, input, settings));\r\n  toggleButtonState(inputs, button, settings);\r\n}\r\n","// Конфигурация API\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/cohort-mag-4\",\r\n  headers: {\r\n    authorization: \"24d783c9-4589-4b16-976b-59abee94e07f\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst API_ENDPOINTS = {\r\n  USER_INFO: \"/users/me\",\r\n  CARDS: \"/cards\",\r\n  AVATAR: \"/users/me/avatar\",\r\n};\r\n\r\n// Функция для обработки ответа от сервера\r\nfunction handleResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return res.json().then((err) => {\r\n    throw new Error(\r\n      `Ошибка: ${res.status} - ${err.message || \"Неизвестная ошибка\"}`\r\n    );\r\n  });\r\n}\r\n\r\n// функция для обработки ошибок\r\nfunction handleError(error) {\r\n  console.error(`Произошла ошибка: ${error.message}`);\r\n  showErrorToUser(error.message);\r\n}\r\n\r\n// функция для отправки запросов\r\nfunction request(endpoint, options = {}) {\r\n  const finalOptions = {\r\n    headers: { ...config.headers },\r\n    ...options,\r\n  };\r\n\r\n  return fetch(`${config.baseUrl}${endpoint}`, finalOptions)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\n// Функция для отображения ошибки пользователю\r\nfunction showErrorToUser(message) {\r\n  const errorMessage = document.createElement(\"div\");\r\n  errorMessage.classList.add(\"error-message\");\r\n  errorMessage.textContent = `Произошла ошибка: ${message}`;\r\n  document.body.appendChild(errorMessage);\r\n  setTimeout(() => {\r\n    errorMessage.remove();\r\n  }, 5000);\r\n}\r\n\r\n// API функции для работы с пользователем и карточками\r\nexport function getUserInfo() {\r\n  return request(API_ENDPOINTS.USER_INFO, { method: \"GET\" });\r\n}\r\n\r\nexport function updateUserInfo(name, about) {\r\n  return request(API_ENDPOINTS.USER_INFO, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({ name, about }),\r\n  });\r\n}\r\n\r\nexport function getCards() {\r\n  return request(API_ENDPOINTS.CARDS, { method: \"GET\" });\r\n}\r\n\r\nexport function addCard(name, link) {\r\n  return request(API_ENDPOINTS.CARDS, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ name, link }),\r\n  });\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function likeCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}/likes`, { method: \"PUT\" });\r\n}\r\n\r\nexport function dislikeCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}/likes`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function updateAvatar(avatarUrl) {\r\n  return request(API_ENDPOINTS.AVATAR, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({ avatar: avatarUrl }),\r\n  });\r\n}\r\n","import \"./pages/index.css\";\nimport { createCard } from \"./components/card.js\";\nimport { openPopup, closePopup } from \"./components/modal.js\";\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\nimport {\n  getUserInfo,\n  updateUserInfo,\n  getCards,\n  addCard,\n  deleteCard,\n  likeCard,\n  dislikeCard,\n  updateAvatar,\n} from \"./components/api.js\";\n\n// Общие элементы\nconst elements = {\n  popups: document.querySelectorAll(\".popup\"),\n  closeButtons: document.querySelectorAll(\".popup__close\"),\n  editButton: document.querySelector(\".profile__edit-button\"),\n  addButton: document.querySelector(\".profile__add-button\"),\n  placesList: document.querySelector(\".places__list\"),\n  editPopup: document.querySelector(\".popup_type_edit\"),\n  addPopup: document.querySelector(\".popup_type_new-card\"),\n  imagePopup: document.querySelector(\".popup_type_image\"),\n  formEditProfile: document.querySelector('.popup__form[name=\"edit-profile\"]'),\n  formAddCard: document.querySelector('.popup__form[name=\"new-place\"]'),\n  nameInput: document.querySelector(\".popup__input_type_name\"),\n  jobInput: document.querySelector(\".popup__input_type_description\"),\n  profileName: document.querySelector(\".profile__title\"),\n  profileJob: document.querySelector(\".profile__description\"),\n  profileAvatar: document.querySelector(\".profile__image img\"),\n  popupImage: document.querySelector(\".popup_type_image .popup__image\"),\n  popupCaption: document.querySelector(\".popup_type_image .popup__caption\"),\n  placeNameInput: document.querySelector(\".popup__input_type_card-name\"),\n  placeLinkInput: document.querySelector(\".popup__input_type_url\"),\n  deletePopup: document.querySelector(\"#delete-popup\"),\n  deleteConfirmButton: document.querySelector(\n    \"#delete-popup .popup__confirm-button\"\n  ),\n  avatarPopup: document.querySelector(\".popup_type_avatar\"),\n  avatarForm: document.querySelector('.popup__form[name=\"avatar-form\"]'),\n  avatarInput: document.querySelector(\".popup__input_type_avatar\"),\n  avatarButton: document.querySelector(\".profile__avatar-button\"),\n  editAvatarButton: document.querySelector(\".profile__edit-icon\"),\n};\n\n// Включение валидации\nconst validationSettings = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\nenableValidation(validationSettings);\n\n// Загружаем данные и карточки с сервера\nlet currentUserId;\nPromise.all([getUserInfo(), getCards()])\n  .then(([userData, cards]) => {\n    currentUserId = userData._id;\n    renderUserInfo(userData);\n    renderCards(cards, currentUserId);\n  })\n  .catch((err) => console.error(\"Ошибка при загрузке данных:\", err));\n\n// Функция для рендеринга данных пользователя\nfunction renderUserInfo(userData) {\n  elements.profileName.textContent = userData.name;\n  elements.profileJob.textContent = userData.about;\n  elements.profileAvatar.src = userData.avatar;\n}\n\n// Функция для рендеринга карточек\nfunction renderCards(cards, currentUserId) {\n  cards.forEach((card) => {\n    const cardElement = createCard(\n      card,\n      currentUserId,\n      openImagePopup,\n      handleDelete,\n      handleLike\n    );\n    const likeButton = cardElement.querySelector(\".card__like-button\");\n\n    const isLikedByUser = card.likes.some((like) => like._id === currentUserId);\n    if (isLikedByUser) {\n      likeButton.classList.add(\"card__like-button_is-active\");\n    }\n\n    elements.placesList.append(cardElement);\n  });\n}\n\n// Универсальная функция для открытия попапа\nfunction openAnyPopup(popupElement) {\n  const form = popupElement.querySelector(\".popup__form\");\n\n  if (form) {\n    clearValidation(form, validationSettings);\n    enableValidation(validationSettings);\n  }\n\n  openPopup(popupElement);\n}\n\n// Функция для обработки загрузки кнопки\nfunction toggleButtonLoadingState(\n  button,\n  isLoading,\n  defaultText = \"Сохранить\"\n) {\n  if (isLoading) {\n    button.textContent = \"Сохранение...\";\n    button.disabled = true;\n  } else {\n    button.textContent = defaultText;\n    button.disabled = false;\n  }\n}\n\n// Обработчик отправки формы редактирования аватара\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  const avatarUrl = elements.avatarInput.value;\n  const submitButton = evt.target.querySelector(\".popup__button\");\n\n  toggleButtonLoadingState(submitButton, true);\n\n  updateAvatar(avatarUrl)\n    .then((data) => {\n      elements.profileAvatar.src = data.avatar;\n      closePopup(elements.avatarPopup);\n    })\n    .catch((err) => console.error(\"Ошибка при обновлении аватара:\", err))\n    .finally(() => {\n      toggleButtonLoadingState(submitButton, false);\n    });\n}\n\n// Обработка формы редактирования профиля\nfunction handleFormEditProfile(evt) {\n  evt.preventDefault();\n  const name = elements.nameInput.value;\n  const about = elements.jobInput.value;\n  const submitButton = evt.target.querySelector(\".popup__button\");\n\n  toggleButtonLoadingState(submitButton, true);\n\n  updateUserInfo(name, about)\n    .then((updatedUserData) => {\n      renderUserInfo(updatedUserData);\n      closePopup(elements.editPopup);\n    })\n    .catch((err) => console.error(\"Ошибка при отправке данных на сервер:\", err))\n    .finally(() => {\n      toggleButtonLoadingState(submitButton, false);\n    });\n}\n\n// Функция для добавления карточки\nfunction handleAddCard(evt) {\n  evt.preventDefault();\n  const cardName = elements.placeNameInput.value;\n  const cardLink = elements.placeLinkInput.value;\n  const submitButton = evt.target.querySelector(\".popup__button\");\n\n  toggleButtonLoadingState(submitButton, true);\n\n  addCard(cardName, cardLink)\n    .then((newCard) => {\n      const cardElement = createCard(\n        newCard,\n        currentUserId,\n        openImagePopup,\n        handleDelete,\n        handleLike\n      );\n      elements.placesList.prepend(cardElement);\n      closePopup(elements.addPopup);\n      elements.formAddCard.reset();\n    })\n    .catch((err) => console.error(\"Ошибка добавления карточки:\", err))\n    .finally(() => {\n      toggleButtonLoadingState(submitButton, false);\n    });\n}\n\n// Функция для постановки/снятия лайка\nfunction handleLike(cardId, likeButton, likeCount) {\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n  const apiRequest = isLiked ? dislikeCard : likeCard;\n\n  apiRequest(cardId)\n    .then((updatedCard) => {\n      likeCount.textContent = updatedCard.likes.length;\n      likeButton.classList.toggle(\"card__like-button_is-active\", !isLiked);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при изменении лайка:\", err);\n    });\n}\n\n// Функция для открытия попапа с изображением\nfunction openImagePopup(imageSrc, imageAlt) {\n  elements.popupImage.src = imageSrc;\n  elements.popupImage.alt = imageAlt;\n  elements.popupCaption.textContent = imageAlt;\n  openAnyPopup(elements.imagePopup);\n}\n\n// Обработчик удаления карточки\nfunction handleDelete(cardElement, cardId) {\n  openAnyPopup(elements.deletePopup);\n  elements.deleteConfirmButton.onclick = () =>\n    confirmDelete(cardElement, cardId);\n}\n\nfunction reloadCards() {\n  elements.placesList.innerHTML = \"\";\n\n  getCards()\n    .then((cards) => {\n      renderCards(cards, currentUserId);\n    })\n    .catch((err) => console.error(\"Ошибка при загрузке карточек:\", err));\n}\n\nfunction confirmDelete(cardElement, cardId) {\n  if (cardElement) {\n    deleteCard(cardId)\n      .then(() => {\n        cardElement.remove();\n        closePopup(elements.deletePopup);\n        reloadCards();\n      })\n      .catch((err) => console.error(\"Ошибка при удалении карточки:\", err));\n  } else {\n    console.error(\"Элемент не определен\");\n  }\n}\n\n// Функции для открытия попапов и закрытия попапов\nfunction openEditProfilePopup() {\n  resetFormValidation(elements.formEditProfile, validationSettings);\n  elements.nameInput.value = elements.profileName.textContent;\n  elements.jobInput.value = elements.profileJob.textContent;\n  openAnyPopup(elements.editPopup);\n}\n\nfunction openAddCardPopup() {\n  elements.formAddCard.reset();\n  openAnyPopup(elements.addPopup);\n}\n\nfunction closePopupHandler(event) {\n  if (event.target === event.currentTarget) closePopup(event.currentTarget);\n}\n\nfunction closeButtonHandler(button) {\n  const popup = button.closest(\".popup\");\n  closePopup(popup);\n}\n\n// Функция очистки ошибок валидации\nfunction resetFormValidation(form, settings) {\n  clearValidation(form, settings);\n}\n\n// Функция для открытия попапа редактирования аватара\nfunction openAvatarEditPopup() {\n  elements.avatarInput.value = \"\";\n  openPopup(elements.avatarPopup);\n}\n\n// Добавление обработчиков событий\nfunction addEventListeners() {\n  elements.editButton.addEventListener(\"click\", openEditProfilePopup);\n  elements.addButton.addEventListener(\"click\", openAddCardPopup);\n  elements.formEditProfile.addEventListener(\"submit\", handleFormEditProfile);\n  elements.formAddCard.addEventListener(\"submit\", handleAddCard);\n\n  elements.popups.forEach((popup) =>\n    popup.addEventListener(\"click\", closePopupHandler)\n  );\n  elements.closeButtons.forEach((button) =>\n    button.addEventListener(\"click\", () => closeButtonHandler(button))\n  );\n\n  // Добавляем обработчик для редактирования аватара\n  elements.editAvatarButton.addEventListener(\"click\", openAvatarEditPopup);\n  elements.avatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n}\n\n// Инициализация приложения\nfunction initApp() {\n  addEventListeners();\n}\n\ninitApp();\n"],"names":["createCard","card","currentUserId","openImagePopup","handleDelete","handleLike","_card$likes","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","likeButton","likeCount","deleteButton","src","link","alt","name","textContent","Array","isArray","likes","length","some","like","_id","classList","add","toggle","owner","addEventListener","event","target","closest","openPopup","popup","handleEscClose","contains","setTimeout","focusable","focus","closePopup","remove","removeEventListener","key","openedPopup","getErrorElement","form","input","concat","hideInputError","settings","errorElement","inputErrorClass","errorClass","toggleButtonState","inputs","button","isFormValid","every","validity","valid","disabled","inactiveButtonClass","enableValidation","from","querySelectorAll","formSelector","forEach","evt","preventDefault","inputSelector","submitButtonSelector","errorMessage","valueMissing","includes","tooShort","minLength","value","tooLong","maxLength","test","validationMessage","getCustomErrorMessage","console","error","showInputError","checkInputValidity","setEventListeners","clearValidation","config","authorization","API_ENDPOINTS","handleResponse","res","ok","json","then","err","Error","status","message","handleError","createElement","body","appendChild","request","endpoint","options","arguments","undefined","finalOptions","_objectSpread","headers","fetch","catch","getCards","method","likeCard","cardId","dislikeCard","elements","popups","closeButtons","editButton","addButton","placesList","editPopup","addPopup","imagePopup","formEditProfile","formAddCard","nameInput","jobInput","profileName","profileJob","profileAvatar","popupImage","popupCaption","placeNameInput","placeLinkInput","deletePopup","deleteConfirmButton","avatarPopup","avatarForm","avatarInput","avatarButton","editAvatarButton","validationSettings","renderUserInfo","userData","about","avatar","renderCards","cards","append","openAnyPopup","popupElement","toggleButtonLoadingState","isLoading","defaultText","handleAvatarFormSubmit","avatarUrl","submitButton","JSON","stringify","updateAvatar","data","finally","handleFormEditProfile","updateUserInfo","updatedUserData","handleAddCard","cardName","cardLink","newCard","prepend","reset","isLiked","updatedCard","imageSrc","imageAlt","onclick","deleteCard","innerHTML","confirmDelete","openEditProfilePopup","openAddCardPopup","closePopupHandler","currentTarget","openAvatarEditPopup","Promise","all","_ref","_ref2","closeButtonHandler"],"sourceRoot":""}