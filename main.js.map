{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/utils.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export function createCard({\n  card = {},\n  currentUserId,\n  openImagePopup,\n  handleDelete,\n  handleLike,\n}) {\n \n  const cardTemplate = document\n    .querySelector(\"#card-template\")\n    .content.cloneNode(true);\n\n  const cardElement = cardTemplate.querySelector(\".card\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCount = cardElement.querySelector(\".card__like-count\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  cardTitle.textContent = card.name;\n  likeCount.textContent = card.likes.length;\n\n  const isLikedByUser = card.likes?.some((like) => like._id === currentUserId);\n  if (isLikedByUser) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  deleteButton.classList.toggle(\n    \"card__delete-button_hidden\",\n    card.owner._id !== currentUserId\n  );\n\n  if (card.owner._id === currentUserId) {\n    deleteButton.addEventListener(\"click\", (event) => {\n      const cardElement = event.target.closest(\".card\");\n      handleDelete(cardElement, card._id);\n    });\n  }\n\n  cardImage.addEventListener(\"click\", () =>\n    openImagePopup(card.link, card.name)\n  );\n\n  likeButton.addEventListener(\"click\", () => {\n    handleLike(card._id, likeButton, likeCount);\n  });\n\n  return cardElement;\n}\n","const ANIMATION_DELAY = 10; \nconst ANIMATION_DURATION = 600; \n\nexport function closePopup(popup, event = null) {\n  if (event) {\n    // Если передано событие, проверяем, был ли клик по фону\n    if (event.target === event.currentTarget) {\n      popup.classList.remove(\"popup_is-opened\");\n      setTimeout(() => {\n        popup.classList.remove(\"popup_is-animated\");\n      }, ANIMATION_DURATION);\n    }\n  } else {\n    // Если событие не передано, закрываем попап напрямую\n    popup.classList.remove(\"popup_is-opened\");\n    setTimeout(() => {\n      popup.classList.remove(\"popup_is-animated\");\n    }, ANIMATION_DURATION);\n  }\n\n  // Удаляем обработчик нажатия Escape\n  document.removeEventListener(\"keydown\", handleEscClose);\n}\n\n// Функция для обработки нажатия Escape\nfunction handleEscClose(event) {\n  if (event.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    if (openedPopup) closePopup(openedPopup);\n  }\n}\n\n// Функция для открытия попапа\nexport function openPopup(popup) {\n  document.addEventListener(\"keydown\", handleEscClose);\n\n  popup.classList.add(\"popup_is-animated\");\n  setTimeout(() => {\n    popup.classList.add(\"popup_is-opened\");\n  }, ANIMATION_DELAY);\n}\n","export const validationSettings = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n\r\n// Универсальная функция для поиска элемента ошибки\r\nfunction getErrorElement(form, input) {\r\n  return form.querySelector(`#${input.name}-error`);\r\n}\r\n\r\n// Универсальная функция для показа ошибок\r\nfunction showInputError(form, input, errorMessage, settings) {\r\n  const errorElement = getErrorElement(form, input);\r\n  if (!errorElement) {\r\n    console.error(`Элемент ошибки для input с name=\"${input.name}\" не найден.`);\r\n    return;\r\n  }\r\n  input.classList.add(settings.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(settings.errorClass);\r\n}\r\n\r\n// Универсальная функция для скрытия ошибок\r\nexport function hideInputError(form, input, settings) {\r\n  const errorElement = getErrorElement(form, input);\r\n  if (!errorElement) return;\r\n  input.classList.remove(settings.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(settings.errorClass);\r\n}\r\n\r\n// Функция изменения состояния кнопки сабмита\r\nexport function toggleButtonState(inputs, button, settings) {\r\n  const isFormValid = inputs.every((input) => input.validity.valid);\r\n  button.disabled = !isFormValid;\r\n  button.classList.toggle(settings.inactiveButtonClass, !isFormValid);\r\n}\r\n\r\n// Функция установки обработчиков событий\r\nfunction setEventListeners(form, settings) {\r\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\r\n  const button = form.querySelector(settings.submitButtonSelector);\r\n\r\n  inputs.forEach((input) => {\r\n    input.addEventListener(\"input\", () => {\r\n      if (!input.validity.valid) {\r\n        showInputError(form, input, input.validationMessage, settings);\r\n      } else {\r\n        hideInputError(form, input, settings);\r\n      }\r\n      toggleButtonState(inputs, button, settings);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation(settings) {\r\n  const forms = Array.from(document.querySelectorAll(settings.formSelector));\r\n  forms.forEach((form) => {\r\n    form.addEventListener(\"submit\", (evt) => evt.preventDefault());\r\n    setEventListeners(form, settings);\r\n  });\r\n}\r\n\r\n// Функция очистки ошибок\r\nexport function clearValidation(form, settings) {\r\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\r\n  const button = form.querySelector(settings.submitButtonSelector);\r\n\r\n  inputs.forEach((input) => hideInputError(form, input, settings));\r\n  toggleButtonState(inputs, button, settings);\r\n}\r\n","// Конфигурация API\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/cohort-mag-4\",\r\n  headers: {\r\n    authorization: \"24d783c9-4589-4b16-976b-59abee94e07f\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst API_ENDPOINTS = {\r\n  USER_INFO: \"/users/me\",\r\n  CARDS: \"/cards\",\r\n  AVATAR: \"/users/me/avatar\",\r\n};\r\n\r\n// Функция для обработки ответа от сервера\r\nfunction handleResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return res.json().then((err) => {\r\n    throw new Error(\r\n      `Ошибка: ${res.status} - ${err.message || \"Неизвестная ошибка\"}`\r\n    );\r\n  });\r\n}\r\n\r\n// функция для отправки запросов\r\nfunction request(endpoint, options = {}) {\r\n  const finalOptions = {\r\n    headers: { ...config.headers },\r\n    ...options,\r\n  };\r\n\r\n  return fetch(`${config.baseUrl}${endpoint}`, finalOptions).then(handleResponse);\r\n}\r\n\r\n// API функции для работы с пользователем и карточками\r\nexport function getUserInfo() {\r\n  return request(API_ENDPOINTS.USER_INFO, { method: \"GET\" });\r\n}\r\n\r\nexport function updateUserInfo(name, about) {\r\n  return request(API_ENDPOINTS.USER_INFO, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({ name, about }),\r\n  });\r\n}\r\n\r\nexport function getCards() {\r\n  return request(API_ENDPOINTS.CARDS, { method: \"GET\" });\r\n}\r\n\r\nexport function addCard(name, link) {\r\n  return request(API_ENDPOINTS.CARDS, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ name, link }),\r\n  });\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function likeCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}/likes`, { method: \"PUT\" });\r\n}\r\n\r\nexport function dislikeCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}/likes`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function updateAvatar(avatarUrl) {\r\n  return request(API_ENDPOINTS.AVATAR, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({ avatar: avatarUrl }),\r\n  });\r\n}\r\n","// Функция для изменения текста кнопки сабмита\r\nexport function renderLoading(isLoading, button, buttonText = 'Сохранить', loadingText = 'Сохранение...') {\r\n    button.textContent = isLoading ? loadingText : buttonText;\r\n  }\r\n  \r\n  // Универсальная функция для обработки отправки формы\r\nexport  function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\r\n    evt.preventDefault(); \r\n  \r\n    const submitButton = evt.submitter;\r\n    const initialText = submitButton.textContent; \r\n  \r\n    renderLoading(true, submitButton, initialText, loadingText);\r\n  \r\n    request()\r\n      .then(() => {\r\n        evt.target.reset(); \r\n      })\r\n      .catch((err) => {\r\n        console.error(`Ошибка: ${err}`); \r\n      })\r\n      .finally(() => {\r\n        renderLoading(false, submitButton, initialText);\r\n      });\r\n  }\r\n  ","import \"./pages/index.css\";\nimport { createCard } from \"./components/card.js\";\nimport { openPopup, closePopup } from \"./components/modal.js\";\nimport {\n  enableValidation,\n  clearValidation,\n  validationSettings,\n} from \"./components/validation.js\";\nimport {\n  getUserInfo,\n  updateUserInfo,\n  getCards,\n  addCard,\n  deleteCard,\n  likeCard,\n  dislikeCard,\n  updateAvatar,\n} from \"./components/api.js\";\nimport { handleSubmit } from \"./components/utils.js\";\n\n// Общие элементы\nconst elements = {\n  popups: document.querySelectorAll(\".popup\"),\n  closeButtons: document.querySelectorAll(\".popup__close\"),\n  editButton: document.querySelector(\".profile__edit-button\"),\n  addButton: document.querySelector(\".profile__add-button\"),\n  placesList: document.querySelector(\".places__list\"),\n  editPopup: document.querySelector(\".popup_type_edit\"),\n  addPopup: document.querySelector(\".popup_type_new-card\"),\n  imagePopup: document.querySelector(\".popup_type_image\"),\n  formEditProfile: document.querySelector('.popup__form[name=\"edit-profile\"]'),\n  formAddCard: document.querySelector('.popup__form[name=\"new-place\"]'),\n  nameInput: document.querySelector(\".popup__input_type_name\"),\n  jobInput: document.querySelector(\".popup__input_type_description\"),\n  profileName: document.querySelector(\".profile__title\"),\n  profileJob: document.querySelector(\".profile__description\"),\n  profileAvatar: document.querySelector(\".profile__image img\"),\n  popupImage: document.querySelector(\".popup_type_image .popup__image\"),\n  popupCaption: document.querySelector(\".popup_type_image .popup__caption\"),\n  placeNameInput: document.querySelector(\".popup__input_type_card-name\"),\n  placeLinkInput: document.querySelector(\".popup__input_type_url\"),\n  deletePopup: document.querySelector(\"#delete-popup\"),\n  deleteConfirmButton: document.querySelector(\n    \"#delete-popup .popup__confirm-button\"\n  ),\n  avatarPopup: document.querySelector(\".popup_type_avatar\"),\n  avatarForm: document.querySelector('.popup__form[name=\"avatar-form\"]'),\n  avatarInput: document.querySelector(\".popup__input_type_avatar\"),\n  avatarButton: document.querySelector(\".profile__avatar-button\"),\n  editAvatarButton: document.querySelector(\".profile__edit-icon\"),\n};\n\n// Загружаем данные и карточки с сервера\nlet currentUserId;\nPromise.all([getUserInfo(), getCards()])\n  .then(([userData, cards]) => {\n    currentUserId = userData._id;\n    renderUserInfo(userData);\n    renderCards(cards, currentUserId);\n  })\n  .catch((err) => console.error(\"Ошибка при загрузке данных:\", err));\n\n// Функция для рендеринга данных пользователя\nfunction renderUserInfo(userData) {\n  elements.profileName.textContent = userData.name;\n  elements.profileJob.textContent = userData.about;\n  elements.profileAvatar.src = userData.avatar;\n}\n\n// Функция для рендеринга карточек\nfunction renderCards(cards, currentUserId, method = \"append\") {\n  cards.forEach((card) => {\n    try {\n      const cardElement = createCard({\n        card,\n        currentUserId,\n        openImagePopup,\n        handleDelete,\n        handleLike,\n      });\n\n      elements.placesList[method](cardElement);\n    } catch (error) {\n      console.error(\"Ошибка при создании карточки:\", error, card);\n    }\n  });\n}\n\n// Универсальная функция для открытия попапа\nfunction openAnyPopup(popupElement, options = {}) {\n  const { clearForm = false, resetForm = false, setInputValues = {}, deactivateSubmitButton = false } = options;\n\n  // Если требуется очистка формы, делаем это\n  if (clearForm) {\n    const form = popupElement.querySelector(\".popup__form\");\n    if (form) clearValidation(form, validationSettings);\n  }\n\n  // Если требуется сброс формы, делаем это\n  if (resetForm) {\n    const form = popupElement.querySelector(\".popup__form\");\n    if (form) form.reset();\n  }\n\n  // Если нужно установить значения в поля ввода\n  for (const [inputName, value] of Object.entries(setInputValues)) {\n    const inputElement = popupElement.querySelector(`.popup__input[name=\"${inputName}\"]`);\n    if (inputElement) inputElement.value = value;\n  }\n\n  // Если нужно деактивировать кнопку сабмита\n  if (deactivateSubmitButton) {\n    const submitButton = popupElement.querySelector('.popup__submit');\n    if (submitButton) submitButton.disabled = true;\n  }\n\n  openPopup(popupElement);\n}\n\n// Обработчик отправки формы редактирования аватара\nfunction handleAvatarFormSubmit(evt) {\n  const avatarUrl = elements.avatarInput.value;\n  const makeRequest = () =>\n    updateAvatar(avatarUrl).then((data) => {\n      elements.profileAvatar.src = data.avatar;\n      closePopup(elements.avatarPopup);\n    });\n\n  handleSubmit(makeRequest, evt);\n}\n\n// Функция для обработки отправки формы редактирования профиля\nfunction handleFormEditProfile(evt) {\n  evt.preventDefault();\n\n  const name = elements.nameInput.value;\n  const about = elements.jobInput.value;\n\n  function makeRequest() {\n    return updateUserInfo(name, about).then((updatedUserData) => {\n      renderUserInfo(updatedUserData);\n      closePopup(elements.editPopup);\n    });\n  }\n\n  handleSubmit(makeRequest, evt);\n}\n\n// Функция для добавления карточки\nfunction handleAddCard(evt) {\n  evt.preventDefault();\n  const cardName = elements.placeNameInput.value;\n  const cardLink = elements.placeLinkInput.value;\n\n  const makeRequest = () =>\n    addCard(cardName, cardLink).then((newCard) => {\n      const cardElement = createCard({\n        card: newCard,\n        currentUserId,\n        openImagePopup,\n        handleDelete,\n        handleLike,\n      });\n      elements.placesList.prepend(cardElement);\n      closePopup(elements.addPopup);\n    });\n\n  handleSubmit(makeRequest, evt);\n}\n\n// Функция для постановки/снятия лайка\nfunction handleLike(cardId, likeButton, likeCount) {\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n  const apiRequest = isLiked ? dislikeCard : likeCard;\n\n  apiRequest(cardId)\n    .then((updatedCard) => {\n      likeCount.textContent = updatedCard.likes.length;\n      likeButton.classList.toggle(\"card__like-button_is-active\", !isLiked);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при изменении лайка:\", err);\n    });\n}\n\n// Обработчик удаления карточки\nfunction handleDelete(cardElement, cardId) {\n  openAnyPopup(elements.deletePopup);\n  elements.deleteConfirmButton.onclick = () =>\n    confirmDelete(cardElement, cardId);\n}\n\nfunction confirmDelete(cardElement, cardId) {\n  if (cardElement) {\n    deleteCard(cardId)\n      .then(() => {\n        cardElement.remove();\n        closePopup(elements.deletePopup);\n      })\n      .catch((err) => console.error(\"Ошибка при удалении карточки:\", err));\n  } else {\n    console.error(\"Элемент не определен\");\n  }\n}\n\n// Функция для открытия попапа с изображением\nfunction openImagePopup(imageSrc, imageAlt) {\n  elements.popupImage.src = imageSrc;\n  elements.popupImage.alt = imageAlt;\n  elements.popupCaption.textContent = imageAlt;\n  openAnyPopup(elements.imagePopup);\n}\n\nfunction openEditProfilePopup() {\n  openAnyPopup(elements.editPopup, {\n    clearForm: true,\n    setInputValues: {\n      name: elements.profileName.textContent,\n      description: elements.profileJob.textContent,\n    },\n  });\n}\n\nfunction openAddCardPopup() {\n  openAnyPopup(elements.addPopup, { resetForm: true });\n}\n\n// Функция для открытия попапа редактирования аватара\nfunction openAvatarEditPopup() {\n  openAnyPopup(elements.avatarPopup, { resetForm: true, deactivateSubmitButton: true });\n}\n\n// Добавление обработчиков событий\nfunction addEventListeners() {\n  elements.editButton.addEventListener(\"click\", openEditProfilePopup);\n  elements.addButton.addEventListener(\"click\", openAddCardPopup);\n  elements.formEditProfile.addEventListener(\"submit\", handleFormEditProfile);\n  elements.formAddCard.addEventListener(\"submit\", handleAddCard);\n\n  elements.popups.forEach((popup) =>\n    popup.addEventListener(\"click\", (event) => {\n      closePopup(popup, event);\n    })\n  );\n  elements.closeButtons.forEach((button) =>\n    button.addEventListener(\"click\", () => closePopup(button.closest(\".popup\")))\n  );\n\n  elements.editAvatarButton.addEventListener(\"click\", openAvatarEditPopup);\n  elements.avatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n}\n\nenableValidation(validationSettings);\n\n// Инициализация приложения\nfunction initApp() {\n  addEventListeners();\n}\n\ninitApp();\n"],"names":["createCard","_ref","_card$likes","_ref$card","card","currentUserId","openImagePopup","handleDelete","handleLike","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","likeButton","likeCount","deleteButton","src","link","alt","name","textContent","likes","length","some","like","_id","classList","add","toggle","owner","addEventListener","event","target","closest","closePopup","popup","arguments","undefined","currentTarget","remove","setTimeout","removeEventListener","handleEscClose","key","openedPopup","validationSettings","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","getErrorElement","form","input","concat","hideInputError","settings","errorElement","toggleButtonState","inputs","button","isFormValid","every","validity","valid","disabled","config","authorization","API_ENDPOINTS","handleResponse","res","ok","json","then","err","Error","status","message","request","endpoint","options","finalOptions","_objectSpread","headers","fetch","likeCard","cardId","method","dislikeCard","renderLoading","isLoading","buttonText","loadingText","handleSubmit","evt","preventDefault","submitButton","submitter","initialText","reset","catch","console","error","finally","elements","popups","querySelectorAll","closeButtons","editButton","addButton","placesList","editPopup","addPopup","imagePopup","formEditProfile","formAddCard","nameInput","jobInput","profileName","profileJob","profileAvatar","popupImage","popupCaption","placeNameInput","placeLinkInput","deletePopup","deleteConfirmButton","avatarPopup","avatarForm","avatarInput","avatarButton","editAvatarButton","renderUserInfo","userData","about","avatar","openAnyPopup","popupElement","_options$clearForm","clearForm","_options$resetForm","resetForm","_options$setInputValu","setInputValues","_options$deactivateSu","deactivateSubmitButton","Array","from","forEach","clearValidation","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","inputName","value","inputElement","isLiked","contains","updatedCard","onclick","deleteCard","confirmDelete","imageSrc","imageAlt","Promise","all","_ref2","cards","renderCards","errorMessage","showInputError","validationMessage","setEventListeners","description","body","JSON","stringify","updateUserInfo","updatedUserData","cardName","cardLink","newCard","prepend","avatarUrl","updateAvatar","data"],"sourceRoot":""}