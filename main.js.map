{"version":3,"file":"main.js","mappings":"mBAGO,SAASA,EAAWC,GACzBC,SAASC,oBAAoB,UAAWC,GAExCH,EAAMI,UAAUC,OAAO,mBAEvBC,YAAW,WACTN,EAAMI,UAAUC,OAAO,oBACzB,GATyB,IAU3B,CAGA,SAASF,EAAeI,GACtB,GAAkB,WAAdA,EAAMC,IAAkB,CAC1B,IAAMC,EAAcR,SAASS,cAAc,oBACvCD,GAAaV,EAAWU,EAC9B,CACF,CCnBO,IAAME,EAAqB,CAChCC,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBAId,SAASC,EAAgBC,EAAMC,GAC7B,OAAOD,EAAKT,cAAc,IAADW,OAAKD,EAAME,KAAI,UAC1C,CAeO,SAASC,EAAeJ,EAAMC,EAAOI,GAC1C,IAAMC,EAAeP,EAAgBC,EAAMC,GACtCK,IACLL,EAAMhB,UAAUC,OAAOmB,EAASR,iBAChCS,EAAaC,YAAc,GAC3BD,EAAarB,UAAUC,OAAOmB,EAASP,YACzC,CAGO,SAASU,EAAkBC,EAAQC,EAAQL,GAChD,IAAMM,EAAcF,EAAOG,OAAM,SAACX,GAAK,OAAKA,EAAMY,SAASC,KAAK,IAChEJ,EAAOK,UAAYJ,EACnBD,EAAOzB,UAAU+B,OAAOX,EAAST,qBAAsBe,EACzD,C,krCCvCA,IAAMM,EAEK,CACPC,cAAe,uCACf,eAAgB,oBAIdC,EACO,YADPA,EAEG,SAKT,SAASC,EAAeC,GACtB,OAAIA,EAAIC,GACCD,EAAIE,OAENF,EAAIE,OAAOC,MAAK,SAACC,GACtB,MAAM,IAAIC,MAAM,WAADxB,OACFmB,EAAIM,OAAM,OAAAzB,OAAMuB,EAAIG,SAAW,sBAE9C,GACF,CAGA,SAASC,EAAQC,GAAwB,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9BG,EAAYC,EAAA,CAChBC,QAAOD,EAAA,GAAOnB,IACXc,GAGL,OAAOO,MAAM,GAADpC,OAhCH,4CAgCqBA,OAAG4B,GAAYK,GAAcX,KACzDJ,EAEJ,CA+BO,SAASmB,EAASC,GACvB,OAAOX,EAAQ,GAAD3B,OAAIiB,EAAmB,KAAAjB,OAAIsC,EAAM,UAAU,CAAEC,OAAQ,OACrE,CAEO,SAASC,EAAYF,GAC1B,OAAOX,EAAQ,GAAD3B,OAAIiB,EAAmB,KAAAjB,OAAIsC,EAAM,UAAU,CACvDC,OAAQ,UAEZ,CC3EO,SAASE,EACdC,EACAlC,GAGA,IAFAmC,EAAUb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,YACbc,EAAWd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,gBAEdtB,EAAOH,YAAcqC,EAAYE,EAAcD,CACjD,CAGO,SAASE,EAAalB,EAASmB,GAAoC,IAA/BF,EAAWd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,gBACvDgB,EAAIC,iBAEJ,IAAMC,EAAeF,EAAIG,UACnBC,EAAcF,EAAa3C,YAEjCoC,GAAc,EAAMO,EAAcE,EAAaN,GAE/CjB,IACGL,MAAK,WACJwB,EAAIK,OAAOC,OACb,IACCC,OAAM,SAAC9B,GACN+B,QAAQC,MAAM,WAADvD,OAAYuB,GAC3B,IACCiC,SAAQ,WACPf,GAAc,EAAOO,EAAcE,EACrC,GACJ,C,ggCCRA,IAgCIO,EHM6BtD,EGtC3BuD,EAAW,CACfC,OAAQ/E,SAASgF,iBAAiB,UAClCC,aAAcjF,SAASgF,iBAAiB,iBACxCE,WAAYlF,SAASS,cAAc,yBACnC0E,UAAWnF,SAASS,cAAc,wBAClC2E,WAAYpF,SAASS,cAAc,iBACnC4E,UAAWrF,SAASS,cAAc,oBAClC6E,SAAUtF,SAASS,cAAc,wBACjC8E,WAAYvF,SAASS,cAAc,qBACnC+E,gBAAiBxF,SAASS,cAAc,qCACxCgF,YAAazF,SAASS,cAAc,kCACpCiF,UAAW1F,SAASS,cAAc,2BAClCkF,SAAU3F,SAASS,cAAc,kCACjCmF,YAAa5F,SAASS,cAAc,mBACpCoF,WAAY7F,SAASS,cAAc,yBACnCqF,cAAe9F,SAASS,cAAc,uBACtCsF,WAAY/F,SAASS,cAAc,mCACnCuF,aAAchG,SAASS,cAAc,qCACrCwF,eAAgBjG,SAASS,cAAc,gCACvCyF,eAAgBlG,SAASS,cAAc,0BACvC0F,YAAanG,SAASS,cAAc,iBACpC2F,oBAAqBpG,SAASS,cAC5B,wCAEF4F,YAAarG,SAASS,cAAc,sBACpC6F,WAAYtG,SAASS,cAAc,oCACnC8F,YAAavG,SAASS,cAAc,6BACpC+F,aAAcxG,SAASS,cAAc,2BACrCgG,iBAAkBzG,SAASS,cAAc,wBAc3C,SAASiG,EAAeC,GACtB7B,EAASc,YAAYnE,YAAckF,EAAStF,KAC5CyD,EAASe,WAAWpE,YAAckF,EAASC,MAC3C9B,EAASgB,cAAce,IAAMF,EAASG,MACxC,CAGA,SAASC,EAAYC,EAAOnC,GAAkC,IAAnBlB,EAAMT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAClD8D,EAAMC,SAAQ,SAACC,GACb,IACE,IAAMC,ECzEL,SAAmBC,GAMvB,IAAAC,EAAAC,EAAAF,EALDF,KAAAA,OAAI,IAAAI,EAAG,CAAC,EAACA,EACTzC,EAAauC,EAAbvC,cACA0C,EAAcH,EAAdG,eACAC,EAAYJ,EAAZI,aACAC,EAAUL,EAAVK,WAMMN,EAJenH,SAClBS,cAAc,kBACdiH,QAAQC,WAAU,GAEYlH,cAAc,SACzCmH,EAAYT,EAAY1G,cAAc,gBACtCoH,EAAYV,EAAY1G,cAAc,gBACtCqH,EAAaX,EAAY1G,cAAc,sBACvCsH,EAAYZ,EAAY1G,cAAc,qBACtCuH,EAAeb,EAAY1G,cAAc,wBAgC/C,OA9BAmH,EAAUf,IAAMK,EAAKe,KACrBL,EAAUM,IAAMhB,EAAK7F,KACrBwG,EAAUpG,YAAcyF,EAAK7F,KAC7B0G,EAAUtG,YAAcyF,EAAKiB,MAAMhF,QAEH,QAAbkE,EAAGH,EAAKiB,aAAK,IAAAd,OAAA,EAAVA,EAAYe,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQzD,CAAa,MAEzEiD,EAAW3H,UAAUoI,IAAI,+BAG3BP,EAAa7H,UAAU+B,OACrB,6BACAgF,EAAKsB,MAAMF,MAAQzD,GAGjBqC,EAAKsB,MAAMF,MAAQzD,GACrBmD,EAAaS,iBAAiB,SAAS,SAACnI,GACtC,IAAM6G,EAAc7G,EAAMiE,OAAOmE,QAAQ,SACzClB,EAAaL,EAAaD,EAAKoB,IACjC,IAGFV,EAAUa,iBAAiB,SAAS,kBAClClB,EAAeL,EAAKe,KAAMf,EAAK7F,KAAK,IAGtCyG,EAAWW,iBAAiB,SAAS,WACnChB,EAAWP,EAAKoB,IAAKR,EAAYC,EACnC,IAEOZ,CACT,CDwB0BwB,CAAW,CAC7BzB,KAAAA,EACArC,cAAAA,EACA0C,eAAAA,EACAC,aAAAA,EACAC,WAAAA,IAGF3C,EAASM,WAAWzB,GAAQwD,EAC9B,CAAE,MAAOxC,GACPD,QAAQC,MAAM,gCAAiCA,EAAOuC,EACxD,CACF,GACF,CAGA,SAAS0B,EACPC,GAEA,IJtEwB9I,EIsExB+I,EAAA5F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6C,CAAC,EAAC6F,EAAAD,EAA7CE,UAAAA,OAAS,IAAAD,GAAQA,EAAAE,EAAAH,EAAEI,eAAAA,OAAc,IAAAD,EAAG,CAAC,EAACA,EAElC/H,EAAO2H,EAAapI,cAAc,gBAEpCS,GAAQ8H,IACV9H,EAAKsD,QH5BF,SAAyBtD,EAAMK,GACpC,IAAMI,EAASwH,MAAMC,KAAKlI,EAAK8D,iBAAiBzD,EAASX,gBACnDgB,EAASV,EAAKT,cAAcc,EAASV,sBAE3Cc,EAAOsF,SAAQ,SAAC9F,GAAK,OAAKG,EAAeJ,EAAMC,EAAOI,EAAS,IAC/DG,EAAkBC,EAAQC,EAAQL,EACpC,CGuBI8H,CAAgBnI,EAAMR,GAqB1B,SAA4BQ,EAAMoI,GAChC,IAAMlF,EAAelD,EAAKT,cAAc,kBACxC2D,EAAanC,UAAYqH,EACzBlF,EAAajE,UAAU+B,OACrBxB,EAAmBI,qBAClBwI,EAEL,CA1BIC,CACErI,EACAiI,MAAMC,KAAKlI,EAAK8D,iBAAiBtE,EAAmBE,gBAAgBkB,OAClE,SAACX,GAAK,OAAKA,EAAMY,SAASC,KAAK,MAKrCwH,OAAOC,QAAQP,GAAgBjC,SAAQ,SAAAyC,GAAwB,IAAAC,EAAAC,EAAAF,EAAA,GAAtBG,EAASF,EAAA,GAAEG,EAAKH,EAAA,GACjDI,EAAelB,EAAapI,cAAc,uBAADW,OACtByI,EAAS,OAE9BE,IAAcA,EAAaD,MAAQA,EACzC,IJ1FwB/J,EI4Fd8I,EJ3FV7I,SAASyI,iBAAiB,UAAWvI,GAErCH,EAAMI,UAAUoI,IAAI,qBACpBlI,YAAW,WACTN,EAAMI,UAAUoI,IAAI,kBACtB,GA5BsB,GImHxB,CA8DA,SAASd,EAAW/D,EAAQoE,EAAYC,GACtC,IAAMiC,EAAUlC,EAAW3H,UAAU8J,SAAS,gCAC3BD,EAAUpG,EAAcH,GAEhCC,GACRhB,MAAK,SAACwH,GACLnC,EAAUtG,YAAcyI,EAAY/B,MAAMhF,OAC1C2E,EAAW3H,UAAU+B,OAAO,+BAAgC8H,EAC9D,IACCvF,OAAM,SAAC9B,GACN+B,QAAQC,MAAM,8BAA+BhC,EAC/C,GACJ,CAGA,SAAS6E,EAAaL,EAAazD,GACjCkF,EAAa9D,EAASqB,aACtBrB,EAASsB,oBAAoB+D,QAAU,kBAIzC,SAAuBhD,EAAazD,GAC9ByD,EFzIC,SAAoBzD,GACzB,OAAOX,EAAQ,GAAD3B,OAAIiB,EAAmB,KAAAjB,OAAIsC,GAAU,CACjDC,OAAQ,UAEZ,CEsIIyG,CAAW1G,GACRhB,MAAK,WACJyE,EAAY/G,SACZN,EAAWgF,EAASqB,YACtB,IACC1B,OAAM,SAAC9B,GAAG,OAAK+B,QAAQC,MAAM,gCAAiChC,EAAI,IAErE+B,QAAQC,MAAM,uBAElB,CAdI0F,CAAclD,EAAazD,EAAO,CACtC,CAgBA,SAAS6D,EAAe+C,EAAUC,GAChCzF,EAASiB,WAAWc,IAAMyD,EAC1BxF,EAASiB,WAAWmC,IAAMqC,EAC1BzF,EAASkB,aAAavE,YAAc8I,EACpC3B,EAAa9D,EAASS,WACxB,CAnKAiF,QAAQC,IAAI,CFbH1H,EAAQV,EAAyB,CAAEsB,OAAQ,QAW3CZ,EAAQV,EAAqB,CAAEsB,OAAQ,UEG7CjB,MAAK,SAAA0E,GAAuB,IAAAsD,EAAAd,EAAAxC,EAAA,GAArBT,EAAQ+D,EAAA,GAAE1D,EAAK0D,EAAA,GACrB7F,EAAgB8B,EAAS2B,IACzB5B,EAAeC,GACfI,EAAYC,EAAOnC,EACrB,IACCJ,OAAM,SAAC9B,GAAG,OAAK+B,QAAQC,MAAM,8BAA+BhC,EAAI,IHDlCpB,EG0MhBb,EHzMDyI,MAAMC,KAAKpJ,SAASgF,iBAAiBzD,EAASZ,eACtDsG,SAAQ,SAAC/F,GACbA,EAAKuH,iBAAiB,UAAU,SAACvE,GAAG,OAAKA,EAAIC,gBAAgB,IAnBjE,SAA2BjD,EAAMK,GAC/B,IAAMI,EAASwH,MAAMC,KAAKlI,EAAK8D,iBAAiBzD,EAASX,gBACnDgB,EAASV,EAAKT,cAAcc,EAASV,sBAE3Cc,EAAOsF,SAAQ,SAAC9F,GACdA,EAAMsH,iBAAiB,SAAS,WACzBtH,EAAMY,SAASC,MAGlBV,EAAeJ,EAAMC,EAAOI,GArCpC,SAAwBL,EAAMC,EAAOwJ,EAAcpJ,GACjD,IAAMC,EAAeP,EAAgBC,EAAMC,GACtCK,GAILL,EAAMhB,UAAUoI,IAAIhH,EAASR,iBAC7BS,EAAaC,YAAckJ,EAC3BnJ,EAAarB,UAAUoI,IAAIhH,EAASP,aALlC0D,QAAQC,MAAM,oCAADvD,OAAqCD,EAAME,KAAI,gBAMhE,CA0BQuJ,CAAe1J,EAAMC,EAAOA,EAAM0J,kBAAmBtJ,GAIvDG,EAAkBC,EAAQC,EAAQL,EACpC,GACF,GACF,CAMIuJ,CAAkB5J,EAAMK,EAC1B,IGgLAuD,EAASI,WAAWuD,iBAAiB,SArBvC,WACEG,EAAa9D,EAASO,UAAW,CAC/B2D,WAAW,EACXE,eAAgB,CACd7H,KAAMyD,EAASc,YAAYnE,YAC3BsJ,YAAajG,EAASe,WAAWpE,cAGvC,IAcEqD,EAASK,UAAUsD,iBAAiB,SAZtC,WACEG,EAAa9D,EAASQ,SAAU,CAAE0D,WAAW,GAC/C,IAWElE,EAASU,gBAAgBiD,iBAAiB,UAtG5C,SAA+BvE,GAC7BA,EAAIC,iBAEJ,IAAM9C,EAAOyD,EAASY,UAAUoE,MAC1BlD,EAAQ9B,EAASa,SAASmE,MAShC7F,GAPA,WACE,OFvGG,SAAwB5C,EAAMuF,GACnC,OAAO7D,EAAQV,EAAyB,CACtCsB,OAAQ,QACRqH,KAAMC,KAAKC,UAAU,CAAE7J,KAAAA,EAAMuF,MAAAA,KAEjC,CEkGWuE,CAAe9J,EAAMuF,GAAOlE,MAAK,SAAC0I,GACvC1E,EAAe0E,GACftL,EAAWgF,EAASO,UACtB,GACF,GAE0BnB,EAC5B,IAyFEY,EAASW,YAAYgD,iBAAiB,UAtFxC,SAAuBvE,GACrBA,EAAIC,iBAEJ,IAAMkH,EAAWvG,EAASmB,eAAe6D,MACnCwB,EAAWxG,EAASoB,eAAe4D,MAEnC1F,EAAeF,EAAIG,UACzBD,EAAanC,UAAW,EACxBmC,EAAajE,UAAUoI,IAAI7H,EAAmBI,qBAQ9CmD,GANoB,WAAH,OFhHK5C,EEiHZgK,EFjHkBpD,EEiHRqD,EFhHbvI,EAAQV,EAAqB,CAClCsB,OAAQ,OACRqH,KAAMC,KAAKC,UAAU,CAAE7J,KAAAA,EAAM4G,KAAAA,OE8GDvF,MAAK,SAAC6I,GAChCxE,EAAY,CAACwE,GAAU1G,EAAe,WACtC/E,EAAWgF,EAASQ,SACtB,IFpHG,IAAiBjE,EAAM4G,CEoHxB,GAEsB/D,EAC5B,IAuEEY,EAASC,OAAOkC,SAAQ,SAAClH,GAAK,OAC5BA,EAAM0I,iBAAiB,aAAa,SAACnI,GAC/BA,EAAMiE,SAAWxE,GACnBD,EAAWC,EAEf,GAAE,IAGJ+E,EAASG,aAAagC,SAAQ,SAACrF,GAAM,OACnCA,EAAO6G,iBAAiB,SAAS,kBAAM3I,EAAW8B,EAAO8G,QAAQ,UAAU,GAAC,IAG9E5D,EAAS2B,iBAAiBgC,iBAAiB,SAvB7C,WACEG,EAAa9D,EAASuB,YAAa,CAAE2C,WAAW,GAClD,IAsBElE,EAASwB,WAAWmC,iBAAiB,UAlIvC,SAAgCvE,GAC9B,IAAMsH,EAAY1G,EAASyB,YAAYuD,MAOvC7F,GANoB,WAAH,OFpDZ,SAAsBuH,GAC3B,OAAOzI,EAnEC,mBAmE6B,CACnCY,OAAQ,QACRqH,KAAMC,KAAKC,UAAU,CAAEpE,OAAQ0E,KAEnC,CEgDIC,CAAaD,GAAW9I,MAAK,SAACgJ,GAC5B5G,EAASgB,cAAce,IAAM6E,EAAK5E,OAClChH,EAAWgF,EAASuB,YACtB,GAAE,GAEsBnC,EAC5B,G","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/utils.js","webpack://mesto-project-ff/./src/index.js","webpack://mesto-project-ff/./src/components/card.js"],"sourcesContent":["const ANIMATION_DELAY = 10;\nconst ANIMATION_DURATION = 600;\n\nexport function closePopup(popup) {\n  document.removeEventListener(\"keydown\", handleEscClose);\n\n  popup.classList.remove(\"popup_is-opened\");\n\n  setTimeout(() => {\n    popup.classList.remove(\"popup_is-animated\");\n  }, ANIMATION_DURATION);\n}\n\n// Функция для обработки нажатия Escape\nfunction handleEscClose(event) {\n  if (event.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    if (openedPopup) closePopup(openedPopup);\n  }\n}\n\n// Функция для открытия попапа\nexport function openPopup(popup) {\n  document.addEventListener(\"keydown\", handleEscClose);\n\n  popup.classList.add(\"popup_is-animated\");\n  setTimeout(() => {\n    popup.classList.add(\"popup_is-opened\");\n  }, ANIMATION_DELAY);\n}\n","export const validationSettings = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n// Универсальная функция для поиска элемента ошибки\r\nfunction getErrorElement(form, input) {\r\n  return form.querySelector(`#${input.name}-error`);\r\n}\r\n\r\n// Универсальная функция для показа ошибок\r\nfunction showInputError(form, input, errorMessage, settings) {\r\n  const errorElement = getErrorElement(form, input);\r\n  if (!errorElement) {\r\n    console.error(`Элемент ошибки для input с name=\"${input.name}\" не найден.`);\r\n    return;\r\n  }\r\n  input.classList.add(settings.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(settings.errorClass);\r\n}\r\n\r\n// Универсальная функция для скрытия ошибок\r\nexport function hideInputError(form, input, settings) {\r\n  const errorElement = getErrorElement(form, input);\r\n  if (!errorElement) return;\r\n  input.classList.remove(settings.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(settings.errorClass);\r\n}\r\n\r\n// Функция изменения состояния кнопки сабмита\r\nexport function toggleButtonState(inputs, button, settings) {\r\n  const isFormValid = inputs.every((input) => input.validity.valid);\r\n  button.disabled = !isFormValid;\r\n  button.classList.toggle(settings.inactiveButtonClass, !isFormValid);\r\n}\r\n\r\n// Функция установки обработчиков событий\r\nfunction setEventListeners(form, settings) {\r\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\r\n  const button = form.querySelector(settings.submitButtonSelector);\r\n\r\n  inputs.forEach((input) => {\r\n    input.addEventListener(\"input\", () => {\r\n      if (!input.validity.valid) {\r\n        showInputError(form, input, input.validationMessage, settings);\r\n      } else {\r\n        hideInputError(form, input, settings);\r\n      }\r\n      toggleButtonState(inputs, button, settings);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation(settings) {\r\n  const forms = Array.from(document.querySelectorAll(settings.formSelector));\r\n  forms.forEach((form) => {\r\n    form.addEventListener(\"submit\", (evt) => evt.preventDefault());\r\n    setEventListeners(form, settings);\r\n  });\r\n}\r\n\r\n// Функция очистки ошибок\r\nexport function clearValidation(form, settings) {\r\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\r\n  const button = form.querySelector(settings.submitButtonSelector);\r\n\r\n  inputs.forEach((input) => hideInputError(form, input, settings));\r\n  toggleButtonState(inputs, button, settings);\r\n}\r\n","// Конфигурация API\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/cohort-mag-4\",\r\n  headers: {\r\n    authorization: \"24d783c9-4589-4b16-976b-59abee94e07f\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst API_ENDPOINTS = {\r\n  USER_INFO: \"/users/me\",\r\n  CARDS: \"/cards\",\r\n  AVATAR: \"/users/me/avatar\",\r\n};\r\n\r\n// Функция для обработки ответа от сервера\r\nfunction handleResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return res.json().then((err) => {\r\n    throw new Error(\r\n      `Ошибка: ${res.status} - ${err.message || \"Неизвестная ошибка\"}`\r\n    );\r\n  });\r\n}\r\n\r\n// функция для отправки запросов\r\nfunction request(endpoint, options = {}) {\r\n  const finalOptions = {\r\n    headers: { ...config.headers },\r\n    ...options,\r\n  };\r\n\r\n  return fetch(`${config.baseUrl}${endpoint}`, finalOptions).then(\r\n    handleResponse\r\n  );\r\n}\r\n\r\n// API функции для работы с пользователем и карточками\r\nexport function getUserInfo() {\r\n  return request(API_ENDPOINTS.USER_INFO, { method: \"GET\" });\r\n}\r\n\r\nexport function updateUserInfo(name, about) {\r\n  return request(API_ENDPOINTS.USER_INFO, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({ name, about }),\r\n  });\r\n}\r\n\r\nexport function getCards() {\r\n  return request(API_ENDPOINTS.CARDS, { method: \"GET\" });\r\n}\r\n\r\nexport function addCard(name, link) {\r\n  return request(API_ENDPOINTS.CARDS, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ name, link }),\r\n  });\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function likeCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}/likes`, { method: \"PUT\" });\r\n}\r\n\r\nexport function dislikeCard(cardId) {\r\n  return request(`${API_ENDPOINTS.CARDS}/${cardId}/likes`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function updateAvatar(avatarUrl) {\r\n  return request(API_ENDPOINTS.AVATAR, {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({ avatar: avatarUrl }),\r\n  });\r\n}\r\n","// Функция для изменения текста кнопки сабмита\r\nexport function renderLoading(\r\n  isLoading,\r\n  button,\r\n  buttonText = \"Сохранить\",\r\n  loadingText = \"Сохранение...\"\r\n) {\r\n  button.textContent = isLoading ? loadingText : buttonText;\r\n}\r\n\r\n// Универсальная функция для обработки отправки формы\r\nexport function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\r\n  evt.preventDefault();\r\n\r\n  const submitButton = evt.submitter;\r\n  const initialText = submitButton.textContent;\r\n\r\n  renderLoading(true, submitButton, initialText, loadingText);\r\n\r\n  request()\r\n    .then(() => {\r\n      evt.target.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(`Ошибка: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, submitButton, initialText);\r\n    });\r\n}\r\n","import \"./pages/index.css\";\nimport { createCard } from \"./components/card.js\";\nimport { openPopup, closePopup } from \"./components/modal.js\";\nimport {\n  enableValidation,\n  clearValidation,\n  validationSettings,\n} from \"./components/validation.js\";\nimport {\n  getUserInfo,\n  updateUserInfo,\n  getCards,\n  addCard,\n  deleteCard,\n  likeCard,\n  dislikeCard,\n  updateAvatar,\n} from \"./components/api.js\";\nimport { handleSubmit } from \"./components/utils.js\";\n\n// Общие элементы\nconst elements = {\n  popups: document.querySelectorAll(\".popup\"),\n  closeButtons: document.querySelectorAll(\".popup__close\"),\n  editButton: document.querySelector(\".profile__edit-button\"),\n  addButton: document.querySelector(\".profile__add-button\"),\n  placesList: document.querySelector(\".places__list\"),\n  editPopup: document.querySelector(\".popup_type_edit\"),\n  addPopup: document.querySelector(\".popup_type_new-card\"),\n  imagePopup: document.querySelector(\".popup_type_image\"),\n  formEditProfile: document.querySelector('.popup__form[name=\"edit-profile\"]'),\n  formAddCard: document.querySelector('.popup__form[name=\"new-place\"]'),\n  nameInput: document.querySelector(\".popup__input_type_name\"),\n  jobInput: document.querySelector(\".popup__input_type_description\"),\n  profileName: document.querySelector(\".profile__title\"),\n  profileJob: document.querySelector(\".profile__description\"),\n  profileAvatar: document.querySelector(\".profile__image img\"),\n  popupImage: document.querySelector(\".popup_type_image .popup__image\"),\n  popupCaption: document.querySelector(\".popup_type_image .popup__caption\"),\n  placeNameInput: document.querySelector(\".popup__input_type_card-name\"),\n  placeLinkInput: document.querySelector(\".popup__input_type_url\"),\n  deletePopup: document.querySelector(\"#delete-popup\"),\n  deleteConfirmButton: document.querySelector(\n    \"#delete-popup .popup__confirm-button\"\n  ),\n  avatarPopup: document.querySelector(\".popup_type_avatar\"),\n  avatarForm: document.querySelector('.popup__form[name=\"avatar-form\"]'),\n  avatarInput: document.querySelector(\".popup__input_type_avatar\"),\n  avatarButton: document.querySelector(\".profile__avatar-button\"),\n  editAvatarButton: document.querySelector(\".profile__edit-icon\"),\n};\n\n// Загружаем данные и карточки с сервера\nlet currentUserId;\nPromise.all([getUserInfo(), getCards()])\n  .then(([userData, cards]) => {\n    currentUserId = userData._id;\n    renderUserInfo(userData);\n    renderCards(cards, currentUserId);\n  })\n  .catch((err) => console.error(\"Ошибка при загрузке данных:\", err));\n\n// Функция для рендеринга данных пользователя\nfunction renderUserInfo(userData) {\n  elements.profileName.textContent = userData.name;\n  elements.profileJob.textContent = userData.about;\n  elements.profileAvatar.src = userData.avatar;\n}\n\n// Функция для рендеринга карточек\nfunction renderCards(cards, currentUserId, method = \"append\") {\n  cards.forEach((card) => {\n    try {\n      const cardElement = createCard({\n        card,\n        currentUserId,\n        openImagePopup,\n        handleDelete,\n        handleLike,\n      });\n\n      elements.placesList[method](cardElement);\n    } catch (error) {\n      console.error(\"Ошибка при создании карточки:\", error, card);\n    }\n  });\n}\n\n// Универсальная функция для открытия попапа\nfunction openAnyPopup(\n  popupElement,\n  { clearForm = false, setInputValues = {} } = {}\n) {\n  const form = popupElement.querySelector(\".popup__form\");\n\n  if (form && clearForm) {\n    form.reset();\n    clearValidation(form, validationSettings);\n\n    toggleSubmitButton(\n      form,\n      Array.from(form.querySelectorAll(validationSettings.inputSelector)).every(\n        (input) => input.validity.valid\n      )\n    );\n  }\n\n  Object.entries(setInputValues).forEach(([inputName, value]) => {\n    const inputElement = popupElement.querySelector(\n      `.popup__input[name=\"${inputName}\"]`\n    );\n    if (inputElement) inputElement.value = value;\n  });\n\n  openPopup(popupElement);\n}\n\n// Универсальная функция для деактивации кнопки\nfunction toggleSubmitButton(form, isValid) {\n  const submitButton = form.querySelector(\".popup__button\");\n  submitButton.disabled = !isValid;\n  submitButton.classList.toggle(\n    validationSettings.inactiveButtonClass,\n    !isValid\n  );\n}\n\n// Обработчик отправки формы редактирования аватара\nfunction handleAvatarFormSubmit(evt) {\n  const avatarUrl = elements.avatarInput.value;\n  const makeRequest = () =>\n    updateAvatar(avatarUrl).then((data) => {\n      elements.profileAvatar.src = data.avatar;\n      closePopup(elements.avatarPopup);\n    });\n\n  handleSubmit(makeRequest, evt);\n}\n\n// Функция для обработки отправки формы редактирования профиля\nfunction handleFormEditProfile(evt) {\n  evt.preventDefault();\n\n  const name = elements.nameInput.value;\n  const about = elements.jobInput.value;\n\n  function makeRequest() {\n    return updateUserInfo(name, about).then((updatedUserData) => {\n      renderUserInfo(updatedUserData);\n      closePopup(elements.editPopup);\n    });\n  }\n\n  handleSubmit(makeRequest, evt);\n}\n\n// Функция для добавления карточки\nfunction handleAddCard(evt) {\n  evt.preventDefault();\n\n  const cardName = elements.placeNameInput.value;\n  const cardLink = elements.placeLinkInput.value;\n\n  const submitButton = evt.submitter;\n  submitButton.disabled = true;\n  submitButton.classList.add(validationSettings.inactiveButtonClass);\n\n  const makeRequest = () =>\n    addCard(cardName, cardLink).then((newCard) => {\n      renderCards([newCard], currentUserId, \"prepend\");\n      closePopup(elements.addPopup);\n    });\n\n  handleSubmit(makeRequest, evt);\n}\n\n// Функция для постановки/снятия лайка\nfunction handleLike(cardId, likeButton, likeCount) {\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\n  const apiRequest = isLiked ? dislikeCard : likeCard;\n\n  apiRequest(cardId)\n    .then((updatedCard) => {\n      likeCount.textContent = updatedCard.likes.length;\n      likeButton.classList.toggle(\"card__like-button_is-active\", !isLiked);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при изменении лайка:\", err);\n    });\n}\n\n// Обработчик удаления карточки\nfunction handleDelete(cardElement, cardId) {\n  openAnyPopup(elements.deletePopup);\n  elements.deleteConfirmButton.onclick = () =>\n    confirmDelete(cardElement, cardId);\n}\n\nfunction confirmDelete(cardElement, cardId) {\n  if (cardElement) {\n    deleteCard(cardId)\n      .then(() => {\n        cardElement.remove();\n        closePopup(elements.deletePopup);\n      })\n      .catch((err) => console.error(\"Ошибка при удалении карточки:\", err));\n  } else {\n    console.error(\"Элемент не определен\");\n  }\n}\n\n// Функция для открытия попапа с изображением\nfunction openImagePopup(imageSrc, imageAlt) {\n  elements.popupImage.src = imageSrc;\n  elements.popupImage.alt = imageAlt;\n  elements.popupCaption.textContent = imageAlt;\n  openAnyPopup(elements.imagePopup);\n}\n\nfunction openEditProfilePopup() {\n  openAnyPopup(elements.editPopup, {\n    clearForm: true,\n    setInputValues: {\n      name: elements.profileName.textContent,\n      description: elements.profileJob.textContent,\n    },\n  });\n}\n\nfunction openAddCardPopup() {\n  openAnyPopup(elements.addPopup, { clearForm: true });\n}\n\n// Функция для открытия попапа редактирования аватара\nfunction openAvatarEditPopup() {\n  openAnyPopup(elements.avatarPopup, { clearForm: true });\n}\n\n// Добавление обработчиков событий\nfunction addEventListeners() {\n  elements.editButton.addEventListener(\"click\", openEditProfilePopup);\n  elements.addButton.addEventListener(\"click\", openAddCardPopup);\n  elements.formEditProfile.addEventListener(\"submit\", handleFormEditProfile);\n  elements.formAddCard.addEventListener(\"submit\", handleAddCard);\n\n  elements.popups.forEach((popup) =>\n    popup.addEventListener(\"mousedown\", (event) => {\n      if (event.target === popup) {\n        closePopup(popup);\n      }\n    })\n  );\n\n  elements.closeButtons.forEach((button) =>\n    button.addEventListener(\"click\", () => closePopup(button.closest(\".popup\")))\n  );\n\n  elements.editAvatarButton.addEventListener(\"click\", openAvatarEditPopup);\n  elements.avatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\n}\n\nenableValidation(validationSettings);\n\n// Инициализация приложения\nfunction initApp() {\n  addEventListeners();\n}\n\ninitApp();\n","export function createCard({\n  card = {},\n  currentUserId,\n  openImagePopup,\n  handleDelete,\n  handleLike,\n}) {\n  const cardTemplate = document\n    .querySelector(\"#card-template\")\n    .content.cloneNode(true);\n\n  const cardElement = cardTemplate.querySelector(\".card\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCount = cardElement.querySelector(\".card__like-count\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  cardTitle.textContent = card.name;\n  likeCount.textContent = card.likes.length;\n\n  const isLikedByUser = card.likes?.some((like) => like._id === currentUserId);\n  if (isLikedByUser) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  deleteButton.classList.toggle(\n    \"card__delete-button_hidden\",\n    card.owner._id !== currentUserId\n  );\n\n  if (card.owner._id === currentUserId) {\n    deleteButton.addEventListener(\"click\", (event) => {\n      const cardElement = event.target.closest(\".card\");\n      handleDelete(cardElement, card._id);\n    });\n  }\n\n  cardImage.addEventListener(\"click\", () =>\n    openImagePopup(card.link, card.name)\n  );\n\n  likeButton.addEventListener(\"click\", () => {\n    handleLike(card._id, likeButton, likeCount);\n  });\n\n  return cardElement;\n}\n"],"names":["closePopup","popup","document","removeEventListener","handleEscClose","classList","remove","setTimeout","event","key","openedPopup","querySelector","validationSettings","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","getErrorElement","form","input","concat","name","hideInputError","settings","errorElement","textContent","toggleButtonState","inputs","button","isFormValid","every","validity","valid","disabled","toggle","config","authorization","API_ENDPOINTS","handleResponse","res","ok","json","then","err","Error","status","message","request","endpoint","options","arguments","length","undefined","finalOptions","_objectSpread","headers","fetch","likeCard","cardId","method","dislikeCard","renderLoading","isLoading","buttonText","loadingText","handleSubmit","evt","preventDefault","submitButton","submitter","initialText","target","reset","catch","console","error","finally","currentUserId","elements","popups","querySelectorAll","closeButtons","editButton","addButton","placesList","editPopup","addPopup","imagePopup","formEditProfile","formAddCard","nameInput","jobInput","profileName","profileJob","profileAvatar","popupImage","popupCaption","placeNameInput","placeLinkInput","deletePopup","deleteConfirmButton","avatarPopup","avatarForm","avatarInput","avatarButton","editAvatarButton","renderUserInfo","userData","about","src","avatar","renderCards","cards","forEach","card","cardElement","_ref","_card$likes","_ref$card","openImagePopup","handleDelete","handleLike","content","cloneNode","cardImage","cardTitle","likeButton","likeCount","deleteButton","link","alt","likes","some","like","_id","add","owner","addEventListener","closest","createCard","openAnyPopup","popupElement","_ref3","_ref3$clearForm","clearForm","_ref3$setInputValues","setInputValues","Array","from","clearValidation","isValid","toggleSubmitButton","Object","entries","_ref4","_ref5","_slicedToArray","inputName","value","inputElement","isLiked","contains","updatedCard","onclick","deleteCard","confirmDelete","imageSrc","imageAlt","Promise","all","_ref2","errorMessage","showInputError","validationMessage","setEventListeners","description","body","JSON","stringify","updateUserInfo","updatedUserData","cardName","cardLink","newCard","avatarUrl","updateAvatar","data"],"sourceRoot":""}